function [A, indsRem,icasig, Mwhite, icaweights] = runICA_TEP(mixedsig,ts, ts_in, ...    ts_out, chanlocs, maxNumIter, rmch, tempMean)%% This function performs ICA for TEPs%% input:%% mixedsig: EEG data (channels X times X trials)% ts: timeaxis 1 x times% ts_in: the time interval to include in ICA computation [start_time end_time] % ts_out: the time interval to exclude from ICA computation (within the% ts_in) [start_time end_time]% ts_in) [start_time end_time]% chanlocs: from EEG.chanlocs to topoplot% maxNumIter: maximum number of iterations for fastICA% rmch: channels removed from chanlocs (1 x number of channels) logical values.% True for removed, false otherwise% tempMean: not needed here%% output:% A: mixing matrix (channels X components)% indsRem : artifact indices% icasig: component waveforms (components X times)% Mwhite: whitening matrix % .........................................................................% 13 October 2023 : Johanna Metsomaa, Aalto university  % .........................................................................[~, it1]=min(abs(ts-ts_in(1)));[~, it2]=min(abs(ts-ts_in(2)));if ~isempty(ts_out)[~, ito1]=min(abs(ts-ts_out(1)));[~, ito2]=min(abs(ts-ts_out(2)));its=setdiff(it1:it2, ito1:ito2);else    its=it1:it2;end% Divide the data into independent components:[A, W, icasig, ~, Mwhite, icaweights] = fastica_nodemean_for_TESA_complot(mixedsig(:,its,:), maxNumIter);if tempMean    Save=W*mean(mixedsig(:,its,:),3)+repmat(W*tempMean,[1 length(its)]);else    Save=W*mean(mixedsig(:,its,:),3);endindsRem=[]; x_corr=mixedsig(:,its,:)-reshape(A(:,indsRem)*W(indsRem,:)*reshape(mixedsig(:,its,:),size(mixedsig,1),[]),...    [size(A,1), length(its), size(mixedsig,3)]);ts_corr=ts(its);