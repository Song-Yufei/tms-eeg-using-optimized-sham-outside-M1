function [x_corr, ts_corr, A, indsRem,icasig, Mwhite, icaweights] = runICA_TEP_visual(mixedsig,ts, ts_in, ...    ts_out, chanlocs, maxNumIter, rmch, tempMean, keepAll)%% input:%% mixedsig:% ts: timeaxis 1 x times% ts_in: the time interval to include in ICA computation [start_time end_time] % ts_out: the time interval to exclude from ICA computation (within the% ts_in) [start_time end_time]% ts_in) [start_time end_time]% chanlocs: from EEG.chanlocs to topoplot% maxNumIter: maximum number of iterations for fastICA% rmch: channels removed from chanlocs (1 x number of channels) logical.% True for removed, false otherwise% tempMean = []% keepAll= false%% .........................................................................% 13 October 2023 : Johanna Metsomaa, Aalto university  % .........................................................................[~, it1]=min(abs(ts-ts_in(1)));[~, it2]=min(abs(ts-ts_in(2)));if ~isempty(ts_out)[~, ito1]=min(abs(ts-ts_out(1)));[~, ito2]=min(abs(ts-ts_out(2)));its=setdiff(it1:it2, ito1:ito2);else    its=it1:it2;end% Divide the data into independent components:[A, W, icasig, ~, Mwhite, icaweights] = fastica_nodemean(mixedsig(:,its,:), maxNumIter);if tempMean    Save=W*mean(mixedsig(:,its,:),3)+repmat(W*tempMean,[1 length(its)]);else    Save=W*mean(mixedsig(:,its,:),3);endindsRem=[];        ica_fig = figure(999);        if keepAll        happy_with_ica=1;            else        happy_with_ica = 0;    end    while ~happy_with_ica    for i=1:size(A,2)    % Enlarge figure to full screen.    set(ica_fig, 'Units', 'Normalized', 'OuterPosition', [0 0 1 1]);        subtightplot(3,2,5,0.05,[0.1 0.12],[0.1 0.1]);        fs = 1000/(ts(2)-ts(1));    x = squeeze(icasig(i,:,:) );    y = fft(x,[],1);    n = length(x);          % number of samples    f = (0:n-1)*(fs/n);     % frequency range    power = mean(abs(y).^2/n,2);    % power of the DFT        [~, f0] = min(abs(f));    [~, f80] = min(abs(f - 80));    power = 10*log(power/min(power(f0:f80)));        plot(f, power ,'k','LineWidth',1);    xlabel('Frequency [Hz]')    ylabel('Power [dB]')    xlim([0,80]);            title(['Frequency spectrum of IC',num2str(i)]);    %%%% TODO %%%%%%%        subtightplot(3,2,1,0.05,[0.0 0.1],[0.1 0.1]);    test = imagesc(ts,1:size(mixedsig,1),squeeze(icasig(i,:,:))');        colormap('jet');    title('Component over the trials.');    colorbar('southoutside');            subtightplot(3,2,3,0.05,[0.12 0.1],[0.1 0.1]);    hold off;    plot(ts(its), Save(i,:),'k', 'linewidth', 1.5);    set(gca, 'ylim', [min(Save(i,:)) max(Save(i,:))]);    hold on            h=axis;    title('Averaged component');    set(gca, 'xlim', ts_in);    subtightplot(3,4,[3 4],0.05,[0.1 0.1],[0.1 0.1]);    delete(get(gca, 'Children'));    topoplot(A(:,i) - mean(A(:,i)) ,chanlocs(~rmch));    colormap('jet');    title('Topography');        subtightplot(3,2,4,0.05,[0.12 0.1],[0.1 0.1]);        XS=A(:,i)*Save(i,:);    Xall=A(:, setdiff(1:size(A,2),indsRem))*Save(setdiff(1:size(A,2),indsRem),:);    Xrem = Xall - XS;    XS_plot = XS - repmat(mean(XS,1),[size(XS,1),1]);    plot(ts(its), XS_plot,'k');    set(gca, 'xlim', [ts(its(1)) ts(its(end))], 'ylim', [min(XS(:)) max(XS(:))]);    title(['Butterfly plot of IC',num2str(i)])    subtightplot(3,2,6,0.05,[0.1 0.12],[0.1 0.1]);        Xall_plot = Xall - repmat(mean(Xall,1),[size(Xall,1),1]);    Xrem_plot = Xrem - repmat(mean(Xrem,1),[size(Xrem,1),1]);    p1 = plot(ts(its), Xall_plot,'r');    set(gca, 'xlim', [ts(its(1)) ts(its(end))], 'ylim', [min(Xall(:)) max(Xall(:))]);    hold on;    p2 = plot(ts(its), Xrem_plot,'k');    set(gca, 'xlim', [ts(its(1)) ts(its(end))], 'ylim', [min(Xall(:)) max(Xall(:))]);    hold off;    legend([p1(1), p2(1)],{['With IC ',num2str(i)],['Without IC ',num2str(i)]});    title(['Butterfly plot of TEP with and withouth IC',num2str(i)])            sgtitle(['Press key/mouse to remove/keep IC ',num2str(i)]);    key_or_mouse = waitforbuttonpress();    if key_or_mouse        disp(['Component ' ,num2str(i),' marked as bad.']);        indsRem=[indsRem i];    else        disp(['Component ' ,num2str(i),' marked as good.']);    end        clf(ica_fig)end        Xall=A*Save;    Xclean=A(:, setdiff(1:size(A,2),indsRem))*Save(setdiff(1:size(A,2),indsRem),:);    p1 = plot(ts(its), Xall,'r');    set(gca, 'xlim', [ts(its(1)) ts(its(end))], 'ylim', [min(Xall(:)) max(Xall(:))]);    hold on;    p2 = plot(ts(its), Xclean,'k');    set(gca, 'xlim', [ts(its(1)) ts(its(end))], 'ylim', [min(Xall(:)) max(Xall(:))]);    hold off;    legend([p1(1), p2(1)],{'Original TEP','Cleaned TEP'});    title('TEPs before and after ICA. Press 1, enter to end; 0, enter to re-select.');     happy_with_ica =  input('Happy with the ICA outcome: 1, enter. Perform ICA again: 0, enter \n');        if happy_with_ica         clf(ica_fig)    else        indsRem = [];    end    endx_corr=mixedsig(:,its,:)-reshape(A(:,indsRem)*W(indsRem,:)*reshape(mixedsig(:,its,:),size(mixedsig,1),[]),...    [size(A,1), length(its), size(mixedsig,3)]);ts_corr=ts(its);